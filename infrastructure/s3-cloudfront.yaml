AWSTemplateFormatVersion: "2010-09-09"

WebSiteBucket:
  Type: AWS::S3::Bucket
  Properties:
    BucketEncryption:
      ServerSideEncryptionConfiguration:
        - BucketKeyEnabled: true
    VersioningConfiguration:
      Status: Enabled
WebSiteBucketPolicy:
  Type: AWS::S3::BucketPolicy
  Properties:
    Bucket: !Ref WebSiteBucket
    PolicyDocument:
      Version: "2012-10-17"
      Id: PolicyForCloudFrontPrivateContent
      Statement:
        - Sid: AllowCloudFrontServicePrincipal
          Effect: Allow
          Principal:
            Service: cloudfront.amazonaws.com
          Action: s3:GetObject
          Resource: !Join
            - ""
            - - "arn:aws:s3:::"
              - !Ref WebSiteBucket
              - /*
          Condition:
            StringEquals:
              AWS:SourceArn: !Join
                - ""
                - - "arn:aws:cloudfront::"
                  - !Ref AWS::AccountId
                  - ":distribution/"
                  - !Ref CloudFrontDistribution
# CloudFront Distribution for hosting the single page app website
CloudFrontDistribution:
  Type: AWS::CloudFront::Distribution
  Properties:
    DistributionConfig:
      Origins:
        - DomainName: !GetAtt WebSiteBucket.RegionalDomainName
          Id: myS3Origin
          OriginAccessControlId: !GetAtt CloudFrontOriginAccessControl.Id
          S3OriginConfig:
            OriginAccessIdentity: ""
      Enabled: true
      DefaultRootObject: index.html
      HttpVersion: http2
      DefaultCacheBehavior:
        AllowedMethods:
          - DELETE
          - GET
          - HEAD
          - OPTIONS
          - PATCH
          - POST
          - PUT
        CachedMethods:
          - GET
          - HEAD
        TargetOriginId: myS3Origin
        ForwardedValues:
          QueryString: false
          Cookies:
            Forward: none
        ViewerProtocolPolicy: allow-all
        MinTTL: 0
        DefaultTTL: 3600
        MaxTTL: 86400
      PriceClass: PriceClass_200
      Restrictions:
        GeoRestriction:
          RestrictionType: whitelist
          Locations:
            - US
            - CA
            - GB
            - DE
            - PH
            - AU
      Aliases:
        # Use Aliases to specify alternate domain names
        - alphinecodetech.click
        - vms.alphinecodetech.click
      ViewerCertificate:
        AcmCertificateArn: !Ref AcmCertificateArn
        MinimumProtocolVersion: TLSv1.2_2021
        SslSupportMethod: sni-only
      CustomErrorResponses:
        - ErrorCode: 403
          ResponseCode: 200
          ResponsePagePath: /index.html
          ErrorCachingMinTTL: 0
        - ErrorCode: 404
          ResponseCode: 200
          ResponsePagePath: /index.html
          ErrorCachingMinTTL: 0
CloudFrontOriginAccessControl:
  Type: AWS::CloudFront::OriginAccessControl
  Properties:
    OriginAccessControlConfig:
      Name: !Sub ${WebSiteBucket} OAC
      OriginAccessControlOriginType: s3
      SigningBehavior: always
      SigningProtocol: sigv4

HostedZone:
  Type: AWS::Route53::HostedZone
  Properties:
    Name: alphinecodetech.click
    HostedZoneConfig:
      Comment: Hosted zone for my visitor management application
  DeletionPolicy: Retain #Remove this if no charge after recreation.

# Note that CNAMEs are not included here as they were only used for validation needed for public certificate request in ACM. It is a one time setup.
# Alias record for the vms subdomain domain IPV4
CloudFrontVMSAliasRecord:
  Type: AWS::Route53::RecordSet
  Properties:
    HostedZoneId: !Ref HostedZone
    Name: vms.alphinecodetech.click
    Type: A
    AliasTarget:
      HostedZoneId: Z2FDTNDATAQYW2 # Global CloudFront Hosted Zone ID
      DNSName: !GetAtt CloudFrontDistribution.DomainName # Your CloudFront distribution's domain name
      EvaluateTargetHealth: false # Important for CloudFront
