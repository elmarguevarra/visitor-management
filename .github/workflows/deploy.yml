name: Deploy to Production

# Trigger the workflow only on push to the main branch
on:
  push:
    # branches:
    #   - main
    paths:
      - "backend/**"
      - "frontend/**"
      - "deploy_backend_and_infra.sh"
      - "deploy_frontend.sh"
      - ".github/workflows/deploy.yml"

jobs:
  deploy-backend-and-infra:
    runs-on: ubuntu-latest
    if: ${{ github.event.head_commit.message != 'skip backend' }} # Optional skip
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Deploy Backend and Infra
        run: ./deploy_backend_and_infra.sh
        env:
          AWS_REGION: ap-southeast-1
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          COGNITO_ADMIN_INIT_PASSWORD: ${{ secrets.COGNITO_ADMIN_INIT_PASSWORD }}

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: deploy-backend-and-infra
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "npm"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Run deploy script
        run: ./deploy-frontend.sh
        env:
          AWS_REGION: ap-southeast-1
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          COGNITO_ADMIN_INIT_PASSWORD: ${{secrets.COGNITO_ADMIN_INIT_PASSWORD}}
