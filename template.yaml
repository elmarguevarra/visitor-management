AWSTemplateFormatVersion: 2010-09-09
Description: visitor-management
Transform:
  - AWS::Serverless-2016-10-31

Parameters:
  BaseDomain:
    Type: String
    Description: The base domain name (e.g., alphinecodetech.click)
  SubDomain:
    Type: String
    Description: The subdomain for the web frontend (e.g., vms.alphinecodetech.click)
  CognitoCustomDomainName:
    Type: String
    Description: Your custom domain name (e.g., auth.example.com)
  GlobalCloudFrontHostedZoneId:
    Type: String
    Default: Z2FDTNDATAQYW2
    Description: The Global CloudFront Hosted Zone ID
  HostedZoneId:
    Type: String
    Description: The Domain Hosted Zone ID. Value is overriden by deploy.sh if already exist
  AcmCertificateArn:
    Type: String
    Description: The public certificate arn in us-east-1 region. Value is overriden by deploy.sh if already exist
  AdminGroupName:
    Type: String
    Default: admin
    Description: Name of the admin user group in Verified Permissions
  ResidentGroupName:
    Type: String
    Default: resident
    Description: Name of the resident user group in Verified Permissions
  GuardGroupName:
    Type: String
    Default: guard
    Description: Name of the guard user group in Verified Permissions
  CreateHostedZone:
    Type: String
    AllowedValues: [true, false]
    Default: false
    Description: Whether to create the hosted zone
  GoogleClientId:
    Type: String
    Description: Google Client ID for OIDC authentication
  GoogleClientSecret:
    Type: String
    Description: Google Client Secret for OIDC authentication
  SysNotifEmailAddress:
    Type: String
    Description: Email address for SES notifications
  AdminEmailAddress:
    Type: String
    Description: Email address for admin notifications
  NoCachePolicy:
    Type: String
    Description: Global Cache Policy ID for CloudFront (NoCachePolicy)
  AllViewerExceptHostHeader:
    Type: String
    Description: Global Origin Request Policy ID for CloudFront (AllViewerExceptHostHeader)
  SenddEmailNotifications:
    Type: String
    AllowedValues: ["true", "false"]
    Default: "false"
    Description: Whether to enable email notifications

Conditions:
  CreateHostedZoneCondition: !Equals [!Ref CreateHostedZone, "true"]

Resources:
  HostedZoneStack:
    Type: AWS::CloudFormation::Stack
    Condition: CreateHostedZoneCondition
    Properties:
      TemplateURL: ./infrastructure/resources/hosted-zone.yaml

  DatabaseStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./infrastructure/resources/dynamodb-stack.yaml

  ApiGatewayLambdaStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: DatabaseStack
    Properties:
      TemplateURL: ./infrastructure/resources/api-gateway-lambda.yaml
      Parameters:
        SubDomain: !Ref SubDomain
        SysNotifEmailAddress: !Ref SysNotifEmailAddress
        AdminEmailAddress: !Ref AdminEmailAddress

  VerifiedPermissionsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./infrastructure/resources/verified-permissions.yaml
      Parameters:
        AdminGroupName: !Ref AdminGroupName
        ResidentGroupName: !Ref ResidentGroupName
        GuardGroupName: !Ref GuardGroupName

  S3BucketCloudFrontStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./infrastructure/resources/s3bucket-apigateway-cloudfront.yaml
      Parameters:
        AcmCertificateArn: !Ref AcmCertificateArn
        BaseDomain: !Ref BaseDomain
        SubDomain: !Ref SubDomain
        ApiGatewayDomain: !Sub "${ApiGatewayLambdaStack.Outputs.ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com"
        CachePolicyId: !Ref NoCachePolicy
        OriginRequestPolicyId: !Ref AllViewerExceptHostHeader

  RecordSetStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: S3BucketCloudFrontStack
    Properties:
      TemplateURL: ./infrastructure/resources/record-sets.yaml
      Parameters:
        GlobalCloudFrontHostedZoneId: !Ref GlobalCloudFrontHostedZoneId
        BaseDomain: !Ref BaseDomain
        SubDomain: !Ref SubDomain
        HostedZoneId: !If
          - CreateHostedZoneCondition
          - !GetAtt HostedZoneStack.Outputs.HostedZoneId
          - !Ref HostedZoneId

  CognitoUserPoolStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./infrastructure/resources/cognito-user-pool.yaml
      Parameters:
        AdminGroupName: !Ref AdminGroupName
        ResidentGroupName: !Ref ResidentGroupName
        GuardGroupName: !Ref GuardGroupName

  GoogleIdentityProviderStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: CognitoUserPoolStack
    Properties:
      TemplateURL: ./infrastructure/resources/google-identity-provider.yaml
      Parameters:
        GoogleClientId: !Ref GoogleClientId
        GoogleClientSecret: !Ref GoogleClientSecret

  CognitoClientDomainStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - RecordSetStack
      - GoogleIdentityProviderStack
    Properties:
      TemplateURL: ./infrastructure/resources/cognito-client-domain.yaml
      Parameters:
        CognitoCustomDomainName: !Ref CognitoCustomDomainName
        AcmCertificateArn: !Ref AcmCertificateArn
        SubDomain: !Ref SubDomain

  CognitoRecordSetStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: CognitoClientDomainStack
    Properties:
      TemplateURL: ./infrastructure/resources/cognito-record-set.yaml
      Parameters:
        CognitoCustomDomainName: !Ref CognitoCustomDomainName
        HostedZoneId: !If
          - CreateHostedZoneCondition
          - !GetAtt HostedZoneStack.Outputs.HostedZoneId
          - !Ref HostedZoneId

  SESNotificationStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./infrastructure/resources/ses-notification.yaml
      Parameters:
        SysNotifEmailAddress: !Ref SysNotifEmailAddress

  SSMParameterStoreStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./infrastructure/resources/ssm-parameter-store.yaml
      Parameters:
        SendEmailValue: !Ref SenddEmailNotifications

Outputs:
  APIGatewayEndpoint:
    Description: API Gateway endpoint URL for Prod stage
    Value: !Sub https://${ApiGatewayLambdaStack.Outputs.ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/
  CloudFrontDistributionId:
    Description: CloudFront Distribution ID for hosting web front end
    Value: !GetAtt S3BucketCloudFrontStack.Outputs.CloudFrontDistributionId
  CloudFrontDistributionDomainName:
    Description: CloudFront Distribution Domain Name for accessing web front end
    Value: !GetAtt S3BucketCloudFrontStack.Outputs.CloudFrontDistributionDomainName
  WebS3BucketName:
    Description: S3 Bucket for hosting web frontend
    Value: !GetAtt S3BucketCloudFrontStack.Outputs.WebS3BucketName
  UserPoolId:
    Description: Cognito User Pool ID
    Value: !GetAtt CognitoUserPoolStack.Outputs.CognitoUserPool
  UserPoolClientId:
    Description: Cognito User Pool Client ID
    Value: !GetAtt CognitoClientDomainStack.Outputs.CognitoUserPoolClient
  UserPoolDomainUrl:
    Description: Cognito User Pool Domain URL
    Value: !Sub https://${CognitoCustomDomainName}
  AuthorityUrl:
    Description: Cognito User Pool Authority URL (for OIDC client)
    Value: !Sub https://cognito-idp.${AWS::Region}.amazonaws.com/${CognitoUserPoolStack.Outputs.CognitoUserPool}

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    LoggingConfig:
      LogFormat: JSON
