AWSTemplateFormatVersion: 2010-09-09
Description: visitor-management
Transform:
  - AWS::Serverless-2016-10-31

Parameters:
  # CognitoCustomDomainName:
  #   Type: String
  #   Description: Your custom domain name (e.g., auth.example.com)
  #   Default: login.alphinecodetech.click
  CognitoDomainPrefix:
    Type: String
    Default: login
    Description: The Cognito User Pool domain prefix
  AcmCertificateArn:
    Type: String
    Default: arn:aws:acm:us-east-1:121216464768:certificate/4f441ddb-b0d2-493d-b2d0-e5b3ed387553
    Description: The public certificate arn in us-east-1 region
  AdminGroupName:
    Type: String
    Default: admin
    Description: Name of the admin user group in Verified Permissions
  ResidentGroupName:
    Type: String
    Default: resident
    Description: Name of the resident user group in Verified Permissions
  GuardGroupName:
    Type: String
    Default: guard
    Description: Name of the guard user group in Verified Permissions

Resources:
  ApiGatewayStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./infrastructure/resources/api-gateway.yaml

  DatabaseStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./infrastructure/resources/dynamodb-stack.yaml

  AuthorizationStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./infrastructure/resources/verified-permissions.yaml
      Parameters:
        AdminGroupName: !Ref AdminGroupName
        ResidentGroupName: !Ref ResidentGroupName
        GuardGroupName: !Ref GuardGroupName

  # S3 Bucket to host single page app website
  WebSiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - BucketKeyEnabled: true
      VersioningConfiguration:
        Status: Enabled
  WebSiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebSiteBucket
      PolicyDocument:
        Version: "2012-10-17"
        Id: PolicyForCloudFrontPrivateContent
        Statement:
          - Sid: AllowCloudFrontServicePrincipal
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: s3:GetObject
            Resource: !Join
              - ""
              - - "arn:aws:s3:::"
                - !Ref WebSiteBucket
                - /*
            Condition:
              StringEquals:
                AWS:SourceArn: !Join
                  - ""
                  - - "arn:aws:cloudfront::"
                    - !Ref AWS::AccountId
                    - ":distribution/"
                    - !Ref CloudFrontDistribution
  # CloudFront Distribution for hosting the single page app website
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !GetAtt WebSiteBucket.RegionalDomainName
            Id: myS3Origin
            OriginAccessControlId: !GetAtt CloudFrontOriginAccessControl.Id
            S3OriginConfig:
              OriginAccessIdentity: ""
        Enabled: true
        DefaultRootObject: index.html
        HttpVersion: http2
        DefaultCacheBehavior:
          AllowedMethods:
            - DELETE
            - GET
            - HEAD
            - OPTIONS
            - PATCH
            - POST
            - PUT
          CachedMethods:
            - GET
            - HEAD
          TargetOriginId: myS3Origin
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          ViewerProtocolPolicy: allow-all
          MinTTL: 0
          DefaultTTL: 3600
          MaxTTL: 86400
        PriceClass: PriceClass_200
        Restrictions:
          GeoRestriction:
            RestrictionType: whitelist
            Locations:
              - US
              - CA
              - GB
              - DE
              - PH
              - AU
        Aliases:
          # Use Aliases to specify alternate domain names
          - alphinecodetech.click
          - vms.alphinecodetech.click
        ViewerCertificate:
          AcmCertificateArn: !Ref AcmCertificateArn
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: sni-only
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
            ErrorCachingMinTTL: 0
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
            ErrorCachingMinTTL: 0
  CloudFrontOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub ${WebSiteBucket} OAC
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  HostedZone:
    Type: AWS::Route53::HostedZone
    Properties:
      Name: alphinecodetech.click
      HostedZoneConfig:
        Comment: Hosted zone for my visitor management application
    DeletionPolicy: Retain #NOTE: Hosted zone are charged per creation

  # Note that CNAMEs are not included here as they were only used for validation needed for public certificate request in ACM. It is a one time setup.
  # Alias record for the vms subdomain domain IPV4
  CloudFrontVMSAliasRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZone
      Name: vms.alphinecodetech.click
      Type: A
      AliasTarget:
        HostedZoneId: Z2FDTNDATAQYW2 # Global CloudFront Hosted Zone ID
        DNSName: !GetAtt CloudFrontDistribution.DomainName # Your CloudFront distribution's domain name
        EvaluateTargetHealth: false # Important for CloudFront

  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: VisitorManagementCognitoUserPool
      Schema:
        - Name: "given_name"
          Required: true
          Mutable: true
        - Name: "family_name"
          Required: true
          Mutable: true
        - Name: "email"
          Required: true
          Mutable: true
        - Name: "phone_number"
          Required: true
          Mutable: true
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: false
          RequireUppercase: true
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      DeletionProtection: ACTIVE

  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: VisitorManagementCognitoClient
      UserPoolId: !Ref CognitoUserPool
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthFlows:
        - code
      AllowedOAuthScopes:
        - email
        - openid
        - profile
      CallbackURLs:
        - https://vms.alphinecodetech.click/signin-callback
      LogoutURLs:
        - https://vms.alphinecodetech.click/signout-callback
      GenerateSecret: false
      SupportedIdentityProviders:
        - COGNITO
      AccessTokenValidity: 60 # in minutes
      IdTokenValidity: 60 # in minutes
      RefreshTokenValidity: 30 # in days
      TokenValidityUnits:
        AccessToken: minutes
        IdToken: minutes
        RefreshToken: days

  CognitoUserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: !Ref CognitoDomainPrefix
      UserPoolId: !Ref CognitoUserPool
      # CustomDomainConfig:
      #   CertificateArn: arn:aws:acm:us-east-1:121216464768:certificate/4f441ddb-b0d2-493d-b2d0-e5b3ed387553

  AdminUserGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: !Ref AdminGroupName
      UserPoolId: !Ref CognitoUserPool
      Description: Admin users
      Precedence: 0

  ResidentUserGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: !Ref ResidentGroupName
      UserPoolId: !Ref CognitoUserPool
      Description: Resident users
      Precedence: 1

  GuardUserGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: !Ref GuardGroupName
      UserPoolId: !Ref CognitoUserPool
      Description: Guard users
      Precedence: 2

Outputs:
  APIGatewayEndpoint:
    Description: API Gateway endpoint URL for Prod stage
    Value: !Sub https://${ApiGatewayStack.Outputs.ApiGatewayApiNew}.execute-api.${AWS::Region}.amazonaws.com/Prod/
  CloudFrontDistributionId:
    Description: CloudFront Distribution ID for hosting web front end
    Value: !Ref CloudFrontDistribution
  CloudFrontDistributionDomainName:
    Description: CloudFront Distribution Domain Name for accessing web front end
    Value: !GetAtt CloudFrontDistribution.DomainName
  WebS3BucketName:
    Description: S3 Bucket for hosting web frontend
    Value: !Ref WebSiteBucket
  UserPoolId:
    Description: Cognito User Pool ID
    Value: !Ref CognitoUserPool
  UserPoolClientId:
    Description: Cognito User Pool Client ID
    Value: !Ref CognitoUserPoolClient
  UserPoolDomainUrl:
    Description: Cognito User Pool Domain URL
    Value: !Sub https://${CognitoDomainPrefix}.auth.${AWS::Region}.amazoncognito.com
  AuthorityUrl:
    Description: Cognito User Pool Authority URL (for OIDC client)
    Value: !Sub https://cognito-idp.${AWS::Region}.amazonaws.com/${CognitoUserPool}

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    LoggingConfig:
      LogFormat: JSON
