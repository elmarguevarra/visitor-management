AWSTemplateFormatVersion: 2010-09-09
Description: visitor-management
Transform:
  - AWS::Serverless-2016-10-31

Parameters:
  CognitoCustomDomainName:
    Type: String
    Description: Your custom domain name (e.g., auth.example.com)
    Default: login.vms.alphinecodetech.click
  GlobalCloudFrontHostedZoneId:
    Type: String
    Default: Z2FDTNDATAQYW2
    Description: The Global CloudFront Hosted Zone ID
  HostedZoneId:
    Type: String
    Description: The Domain Hosted Zone ID. Value is overriden by deploy.sh if already exist
  AcmCertificateArn:
    Type: String
    Description: The public certificate arn in us-east-1 region. Value is overriden by deploy.sh if already exist
  AdminGroupName:
    Type: String
    Default: admin
    Description: Name of the admin user group in Verified Permissions
  ResidentGroupName:
    Type: String
    Default: resident
    Description: Name of the resident user group in Verified Permissions
  GuardGroupName:
    Type: String
    Default: guard
    Description: Name of the guard user group in Verified Permissions
  CreateHostedZone:
    Type: String
    AllowedValues: [true, false]
    Default: false
    Description: Whether to create the hosted zone

Conditions:
  CreateHostedZoneCondition: !Equals [!Ref CreateHostedZone, "true"]

Resources:
  HostedZoneStack:
    Type: AWS::CloudFormation::Stack
    Condition: CreateHostedZoneCondition
    Properties:
      TemplateURL: ./infrastructure/resources/hosted-zone.yaml

  ApiGatewayLambdaStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./infrastructure/resources/api-gateway-lambda.yaml

  DatabaseStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./infrastructure/resources/dynamodb-stack.yaml

  AuthorizationStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./infrastructure/resources/verified-permissions.yaml
      Parameters:
        AdminGroupName: !Ref AdminGroupName
        ResidentGroupName: !Ref ResidentGroupName
        GuardGroupName: !Ref GuardGroupName

  S3BucketCloudFrontStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./infrastructure/resources/s3-cloudfront.yaml
      Parameters:
        AcmCertificateArn: AcmCertificateArn
        GlobalCloudFrontHostedZoneId: !Ref GlobalCloudFrontHostedZoneId

  CognitoStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./infrastructure/resources/cognito.yaml
      Parameters:
        AdminGroupName: !Ref AdminGroupName
        ResidentGroupName: !Ref ResidentGroupName
        GuardGroupName: !Ref GuardGroupName
        CognitoCustomDomainName: !Ref CognitoCustomDomainName
        AcmCertificateArn: !Ref AcmCertificateArn

  HostedZoneRecordSetStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./infrastructure/resources/record-set.yaml
      Parameters:
        GlobalCloudFrontHostedZoneId: !Ref GlobalCloudFrontHostedZoneId
        CognitoCustomDomainName: !Ref CognitoCustomDomainName
        HostedZoneId: !If
          - CreateHostedZoneCondition
          - !GetAtt HostedZoneStack.Outputs.HostedZoneId
          - !Ref HostedZoneId

Outputs:
  APIGatewayEndpoint:
    Description: API Gateway endpoint URL for Prod stage
    Value: !Sub https://${ApiGatewayLambdaStack.Outputs.ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/
  CloudFrontDistributionId:
    Description: CloudFront Distribution ID for hosting web front end
    Value: !GetAtt S3BucketCloudFrontStack.Outputs.CloudFrontDistributionId
  CloudFrontDistributionDomainName:
    Description: CloudFront Distribution Domain Name for accessing web front end
    Value: !GetAtt S3BucketCloudFrontStack.Outputs.CloudFrontDistributionDomainName
  WebS3BucketName:
    Description: S3 Bucket for hosting web frontend
    Value: !GetAtt S3BucketCloudFrontStack.Outputs.WebS3BucketName
  UserPoolId:
    Description: Cognito User Pool ID
    Value: !GetAtt CognitoStack.Outputs.CognitoUserPool
  UserPoolClientId:
    Description: Cognito User Pool Client ID
    Value: !GetAtt CognitoStack.Outputs.CognitoUserPoolClient
  UserPoolDomainUrl:
    Description: Cognito User Pool Domain URL
    Value: !Sub https://${CognitoCustomDomainName}
  AuthorityUrl:
    Description: Cognito User Pool Authority URL (for OIDC client)
    Value: !Sub https://cognito-idp.${AWS::Region}.amazonaws.com/${CognitoStack.Outputs.CognitoUserPool}
  CognitoCustomDomainName:
    Value: !Sub ${CognitoCustomDomainName}

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    LoggingConfig:
      LogFormat: JSON
