AWSTemplateFormatVersion: 2010-09-09
Description: visitor-management
Transform:
  - AWS::Serverless-2016-10-31

Parameters:
  # CognitoCustomDomainName:
  #   Type: String
  #   Description: Your custom domain name (e.g., auth.example.com)
  #   Default: login.alphinecodetech.click
  GlobalCloudFrontHostedZoneId:
    Type: String
    Default: Z2FDTNDATAQYW2
    Description: The Global CloudFront Hosted Zone ID
  HostedZoneId:
    Type: String
    Default: Z05731382UESHZXWSGHWA
    Description: The Domain Hosted Zone ID
  CognitoDomainPrefix:
    Type: String
    Default: login
    Description: The Cognito User Pool domain prefix
  AcmCertificateArn:
    Type: String
    Default: arn:aws:acm:us-east-1:121216464768:certificate/701751b5-62e5-4526-935f-aeae48311e3e
    Description: The public certificate arn in us-east-1 region
  AdminGroupName:
    Type: String
    Default: admin
    Description: Name of the admin user group in Verified Permissions
  ResidentGroupName:
    Type: String
    Default: resident
    Description: Name of the resident user group in Verified Permissions
  GuardGroupName:
    Type: String
    Default: guard
    Description: Name of the guard user group in Verified Permissions

Resources:
  ApiGatewayLambdaStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./infrastructure/resources/api-gateway-lambda.yaml

  DatabaseStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./infrastructure/resources/dynamodb-stack.yaml

  AuthorizationStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./infrastructure/resources/verified-permissions.yaml
      Parameters:
        AdminGroupName: !Ref AdminGroupName
        ResidentGroupName: !Ref ResidentGroupName
        GuardGroupName: !Ref GuardGroupName

  S3BucketCloudFrontStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./infrastructure/resources/s3-cloudfront.yaml
      Parameters:
        AcmCertificateArn: !Ref AcmCertificateArn
        GlobalCloudFrontHostedZoneId: !Ref GlobalCloudFrontHostedZoneId

  RecordSetStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./infrastructure/resources/record-set.yaml
      Parameters:
        GlobalCloudFrontHostedZoneId: !Ref GlobalCloudFrontHostedZoneId
        HostedZoneId: !Ref HostedZoneId

  # Uncomment on fresh deployment only
  # HostedZoneStack:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: ./infrastructure/resources/hosted-zone.yaml

  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: VisitorManagementCognitoUserPool
      Schema:
        - Name: "given_name"
          Required: true
          Mutable: true
        - Name: "family_name"
          Required: true
          Mutable: true
        - Name: "email"
          Required: true
          Mutable: true
        - Name: "phone_number"
          Required: true
          Mutable: true
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: false
          RequireUppercase: true
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      DeletionProtection: ACTIVE

  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: VisitorManagementCognitoClient
      UserPoolId: !Ref CognitoUserPool
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthFlows:
        - code
      AllowedOAuthScopes:
        - email
        - openid
        - profile
      CallbackURLs:
        - https://vms.alphinecodetech.click/signin-callback
      LogoutURLs:
        - https://vms.alphinecodetech.click/signout-callback
      GenerateSecret: false
      SupportedIdentityProviders:
        - COGNITO
      AccessTokenValidity: 60 # in minutes
      IdTokenValidity: 60 # in minutes
      RefreshTokenValidity: 30 # in days
      TokenValidityUnits:
        AccessToken: minutes
        IdToken: minutes
        RefreshToken: days

  CognitoUserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: !Ref CognitoDomainPrefix
      UserPoolId: !Ref CognitoUserPool
      # CustomDomainConfig:
      #   CertificateArn: arn:aws:acm:us-east-1:121216464768:certificate/4f441ddb-b0d2-493d-b2d0-e5b3ed387553

  AdminUserGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: !Ref AdminGroupName
      UserPoolId: !Ref CognitoUserPool
      Description: Admin users
      Precedence: 0

  ResidentUserGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: !Ref ResidentGroupName
      UserPoolId: !Ref CognitoUserPool
      Description: Resident users
      Precedence: 1

  GuardUserGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: !Ref GuardGroupName
      UserPoolId: !Ref CognitoUserPool
      Description: Guard users
      Precedence: 2

Outputs:
  APIGatewayEndpoint:
    Description: API Gateway endpoint URL for Prod stage
    Value: !Sub https://${ApiGatewayLambdaStack.Outputs.ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/
  CloudFrontDistributionId:
    Description: CloudFront Distribution ID for hosting web front end
    Value: !GetAtt S3BucketCloudFrontStack.Outputs.CloudFrontDistributionId
  CloudFrontDistributionDomainName:
    Description: CloudFront Distribution Domain Name for accessing web front end
    Value: !GetAtt S3BucketCloudFrontStack.Outputs.CloudFrontDistributionDomainName
  WebS3BucketName:
    Description: S3 Bucket for hosting web frontend
    Value: !GetAtt S3BucketCloudFrontStack.Outputs.WebS3BucketName
  UserPoolId:
    Description: Cognito User Pool ID
    Value: !Ref CognitoUserPool
  UserPoolClientId:
    Description: Cognito User Pool Client ID
    Value: !Ref CognitoUserPoolClient
  UserPoolDomainUrl:
    Description: Cognito User Pool Domain URL
    Value: !Sub https://${CognitoDomainPrefix}.auth.${AWS::Region}.amazoncognito.com
  AuthorityUrl:
    Description: Cognito User Pool Authority URL (for OIDC client)
    Value: !Sub https://cognito-idp.${AWS::Region}.amazonaws.com/${CognitoUserPool}

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    LoggingConfig:
      LogFormat: JSON
